blueprint:
  name: Zigbee2MQTT - Moes Smart Knob for lights
  description: 'Control lights with a Moes Smart Knob using Zigbee2MQTT.
    You can set functions for a single press. This allows you to assign, e.g., a scene
    or anything else.
    Rotating left/right will change the brightness smoothly of the selected light.
    Not all functionality of the device is available at time of writing, e.g. double
    press, long press and press and rotate.'
  domain: automation
  input:
    remote:
      name: Remote
      description: Moes Knob to use
      selector:
        device:
          integration: mqtt
    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            domain: light
    step_percent:
      name: Light step
      description: Light percent change for each knob step
      selector:
        number:
          mode: slider
          min: 0
          max: 100
          unit_of_measurement: "%"
      default: 20
    press_light:
      name: Pressed light(s)
      description: The light(s) to control when pressed
      selector:
        target:
          entity:
            domain: light
    press_step_percent:
      name: Pressed light step
      description: Light percent change for each knob step when pressed
      selector:
        number:
          mode: slider
          min: 0
          max: 100
          unit_of_measurement: "%"
      default: 5
    single_press:
      name: Single press
      description: Action to run on single press
      default: []
      selector:
        action: {}
    long_press:
      name: Long press
      description: Action to run on long press
      default: []
      selector:
        action: {}

trigger:
- platform: mqtt
  topic: 'zigbee2mqtt/your_remote_topic'  # Replace with your Zigbee2MQTT topic for the remote
action:
- variables:
    command: '{{ trigger.payload_json.action }}'
    mode: '{{ trigger.payload_json.mode }}'
    steps: '{{ trigger.payload_json.steps }}'
    step_percent: !input step_percent
    press_step_percent: !input press_step_percent
- choose:
  - conditions:
    - '{{ command == ''single'' }}'
    sequence: !input single_press
  - conditions:
    - '{{ command == ''long'' }}'
    sequence: !input long_press
  - conditions:
    - '{{ command == ''rotate'' }}'
    - '{{ mode == ''clockwise'' }}'
    sequence:
    - service: light.turn_on
      target: !input light
      data_template:
        brightness_step_pct: '{{ step_percent * steps }}'
        transition: 0.5
    - wait_for_trigger:
        platform: mqtt
        topic: 'zigbee2mqtt/your_rotate_stop_topic'  # Replace with your Zigbee2MQTT topic for rotate stop
  - conditions:
    - '{{ command == ''rotate'' }}'
    - '{{ mode == ''anticlockwise'' }}'
    sequence:
    - service: light.turn_on
      target: !input light
      data_template:
        brightness_step_pct: '-{{ step_percent * steps }}'
        transition: 0.5
    - wait_for_trigger:
        platform: mqtt
        topic: 'zigbee2mqtt/your_rotate_stop_topic'  # Replace with your Zigbee2MQTT topic for rotate stop
  - conditions:
    - '{{ command == ''press'' }}'
    sequence:
    - service: light.turn_on
      target: !input press_light
      data_template:
        brightness_step_pct: '{{ press_step_percent * steps }}'
        transition: 0.5
    - wait_for_trigger:
        platform: mqtt
        topic: 'zigbee2mqtt/your_press_stop_topic'  # Replace with your Zigbee2MQTT topic for press stop
